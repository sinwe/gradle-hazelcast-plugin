buildscript {
    apply from: file('versions.gradle')

    dependencies {
        classpath libraries.gradleRelease
        classpath libraries.owasp
        classpath libraries.version
    }
}

plugins {
    id "java-gradle-plugin"
    id "com.jfrog.artifactory" version "4.24.20"
    id 'signing'
    id 'maven-publish'
}

apply plugin: "idea"
apply plugin: "groovy"
apply plugin: 'net.researchgate.release'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'com.github.ben-manes.versions'

group = "com.github.sinwe.gradle.caching.hazelcast"
description = "A simple settings plugin that enables build caching in Gradle with a Hazelcast node as the backend"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

gradlePlugin {
    plugins {
        hazelcastPlugin {
            id = "com.github.sinwe.gradle.caching.hazelcast"
            implementationClass = "com.github.sinwe.gradle.caching.hazelcast.HazelcastPlugin"
        }
    }
}

def localRepo = file("$buildDir/repo")

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.sonatypeUsername = hasProperty("ossrhUsername") ? ossrhUsername : System.getenv("ossrhUsername")
ext.sonatypePassword = hasProperty("ossrhPassword") ? ossrhPassword : System.getenv("ossrhPassword")

task sourcesJar(type: Jar) {
    from sourceSets. main. allJava
    archiveClassifier = "sources"
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        hazelcastPlugin(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Gradle Hazelcast Plugin'
                packaging = 'jar'
                description = 'A simple settings plugin that enables build caching in Gradle with a Hazelcast node as the backend'
                url = 'https://github.com/sinwe/gradle-hazelcast-plugin'

                scm {
                    connection = 'scm:git:git@github.com:sinwe/gradle-hazelcast-plugin.git'
                    developerConnection = 'scm:git:git@github.com:sinwe/gradle-hazelcast-plugin.git'
                    url = 'https://github.com/sinwe/gradle-hazelcast-plugin'
                }

                licenses {
                    license {
                        name = 'Apache License, Version 2.0, January 2004'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.html'
                    }
                }

                developers {
                    developer {
                        id = 'sinwe'
                        name = 'Winarto'
                        email = 'winarto@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = 'OSS-Sonatype'
            url = isReleaseVersion ? "https://oss.sonatype.org/service/local/staging/deploy/maven2" : "https://oss.sonatype.org/content/repositories/snapshots"
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

repositories {
    mavenCentral()
}

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    implementation libraries.hazelcastClient
    testImplementation libraries.junit
    testImplementation "org.spockframework:spock-core:1.0-groovy-2.4@jar"
    testImplementation libraries.hazelcast
    testRuntimeOnly files(createClasspathManifest)
}

// --- Configure publications ------------------------------------------

/*
def buildTagFor(String version) {
    switch (version.substring(version.lastIndexOf("-") + 1)) {
        case "SNAPSHOT":
            return "snapshot"
        case ~/M\d+[a-z]*$/:
            return "milestone"
        default:
            return "release"
    }
}
*/

//def targetRepoKey = "libs-${buildTagFor(project.version)}s-local"

/*
artifactory {
    contextUrl = "https://repo.gradle.org/gradle"
    publish {
        repository {
            repoKey = targetRepoKey
            username = project.findProperty("artifactory_user") ?: "nouser"
            password = project.findProperty("artifactory_password") ?: "nopass"
            maven = true
        }
        defaults {
            publications("jar")
        }
    }
    resolve {
        repoKey = "repo"
    }
}
*/

/*uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Gradle Hazelcast Plugin'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'A simple settings plugin that enables build caching in Gradle with a Hazelcast node as the backend'
                url 'https://github.com/sinwe/gradle-hazelcast-plugin'

                scm {
                    connection 'scm:git:git@github.com:sinwe/gradle-hazelcast-plugin.git'
                    developerConnection 'scm:git:git@github.com:sinwe/gradle-hazelcast-plugin.git'
                    url 'https://github.com/sinwe/gradle-hazelcast-plugin'
                }

                licenses {
                    license {
                        name 'Apache License, Version 2.0, January 2004'
                        url 'https://www.apache.org/licenses/LICENSE-2.0.html'
                    }
                }

                developers {
                    developer {
                        id 'sinwe'
                        name 'Winarto'
                        email 'winarto@gmail.com'
                    }
                }
            }
        }
    }
}*/

signing {
    required { isReleaseVersion }
    sign configurations.archives
}

/*
artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}
*/

//afterReleaseBuild.dependsOn uploadArchives

release {
    scmAdapters = [net.researchgate.release.GitAdapter]
    git {
        requireBranch = ''
    }
}

def tasksToDisable = [
    "publishHazelcastPluginPluginMarkerMavenPublicationToOSS-SonatypeRepository",
    "publishHazelcastPluginPublicationToOSS-SonatypeRepository"
]

tasksToDisable.each { taskName ->
    tasks.findByName(taskName)?.enabled = false
}
